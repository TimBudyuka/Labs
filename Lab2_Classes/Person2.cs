// ========================================================================================================================================== //
// НАЧАЛО ФАЙЛА (Person2.cs)
// ========================================================================================================================================== //


// =========[ ИНФОРМАЦИЯ О ФАЙЛЕ (НАЧАЛО) ]================================================================================================== //

// Тип работы  : Практическая работа (Практична робота)
// Тема работы : Классы в C# (Класи в C#)
// Студент     : Будюка Тимур (Timur Budyuka)
// Группа      : 1-3м (Комп'ютерні науки, ФІТ)

// ОПИСАНИЕ:
// Файл класса "Персона 2" (Person2).

// =========[ ИНФОРМАЦИЯ О ФАЙЛЕ (КОНЕЦ)  ]================================================================================================== //


// =========[ ПОДКЛЮЧАЕМЫЕ БИБЛИОТЕКИ, МОДУЛИ, КОМПОНЕНТЫ (НАЧАЛО) ]========================================================================= //
// using [подключаемая-библиотека-модуль-компонент];
// -----[ СИСТЕМНЫЕ/SYSTEM (НАЧАЛО) ]:
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
// -----[ СИСТЕМНЫЕ/SYSTEM (КОНЕЦ)  ].
// =========[ ПОДКЛЮЧАЕМЫЕ БИБЛИОТЕКИ, МОДУЛИ, КОМПОНЕНТЫ (КОНЕЦ)  ]========================================================================= //


// ПРОСТРАНСТВО ИМЕН [1]: "Лабораторная работа № 2. Классы в C#" (Lab2_Classes).
namespace Lab2_Classes
{


    #region// ==================[ КЛАССЫ (НАЧАЛО) ]================================

    // КЛАСС [1]: "Персона 2" (Person2).
    class Person2
    {

        // =========[ ПОЛЯ КЛАССА (НАЧАЛО) ]====================================
        // [модификатор-доступа] [тип] [имя-поля (параметра)];
        string name = $"";    // ПОЛЕ: "Имя"
        string surname = $""; // ПОЛЕ: "Фамилия"
        int id = 0;           // ПОЛЕ: "Идентификатор"
        int age = 0;          // ПОЛЕ: "Возраст"

        // =========[ ПОЛЯ КЛАССА (КОНЕЦ)  ]====================================


        #region// ==================[ КОНСТРУКТОРЫ (НАЧАЛО) ]==========================


        // КОНСТРУКТОР [1]: "Персона 2" (Person2). БЕЗ ПАРАМЕТРОВ.
        // =========[ ОПИСАНИЕ ]================================================
        // Создает объект Персона (Person) со статичными полями (полями со значениями по умолчанию).
        // =====================================================================
        // =========[ ДОПОЛНИТЕЛЬНАЯ ИНФОРМАЦИЯ ]===============================
        // Принцип    : [описание-принципа]
        // Пример     : [описание-примера]
        // Примечание : [описание-примечания]
        // Ограничения: [описание-ограничений]
        // Исключения : [описание-исключений]
        // Ошибки     : [описание-ошибок]
        // =====================================================================
        public Person2()
        {
            name = $"Иван";      // ПОЛЕ: "Имя"
            surname = $"Иванов"; // ПОЛЕ: "Фамилия"
            id = 0;              // ПОЛЕ: "Идентификатор"
            age = 18;            // ПОЛЕ: "Возраст"

            // ...
        } // Конец КОНСТРУКТОРА [1]: "Персона 2" (Person2). БЕЗ ПАРАМЕТРОВ.


        // КОНСТРУКТОР [2]: "Персона 2" (Person2).
        // =========[ ОПИСАНИЕ ]================================================
        // Создает объект Персона (Person) с формальными параметрами (имя, фамилия, ID).
        // =====================================================================
        // =========[ ДОПОЛНИТЕЛЬНАЯ ИНФОРМАЦИЯ ]===============================
        // Принцип    : [описание-принципа]
        // Пример     : [описание-примера]
        // Примечание : [описание-примечания]
        // Ограничения: [описание-ограничений]
        // Исключения : [описание-исключений]
        // Ошибки     : [описание-ошибок]
        // =====================================================================
        // =========[ ФОРМАЛЬНЫЕ ПАРАМЕТРЫ ]====================================
        // 'name'    : имя персоны
        // 'surname' : фамилия или прозвище персоны
        // 'id'      : идентификатор (опознаватель) персоны
        // =====================================================================
        public Person2(string name, string surname, int id) // <-- ref [тип] [параметр]
        {
            this.name = name;
            this.surname = surname;
            this.id = id;

            // ...
        } // Конец КОНСТРУКТОРА [2]: "Персона 2" (Person2).


        // КОНСТРУКТОР [3]: "Персона 2" (Person2).
        // =========[ ОПИСАНИЕ ]================================================
        // Создает объект Персона (Person) с формальными параметрами (имя, фамилия, ID, возраст).
        // =====================================================================
        // =========[ ДОПОЛНИТЕЛЬНАЯ ИНФОРМАЦИЯ ]===============================
        // Принцип    : [описание-принципа]
        // Пример     : [описание-примера]
        // Примечание : [описание-примечания]
        // Ограничения: [описание-ограничений]
        // Исключения : [описание-исключений]
        // Ошибки     : [описание-ошибок]
        // =====================================================================
        // =========[ ФОРМАЛЬНЫЕ ПАРАМЕТРЫ ]====================================
        // 'name'    : имя персоны
        // 'surname' : фамилия или прозвище персоны
        // 'id'      : идентификатор (опознаватель) персоны
        // 'age'     : возраст персоны
        // =====================================================================
        public Person2(string name, string surname, int id, int age) // <-- ref [тип] [параметр]
        {
            this.name = name;
            this.surname = surname;
            this.id = id;
            this.age = age;

            // ...
        } // Конец КОНСТРУКТОРА [3]: "Персона 2" (Person2).


        #endregion
        // ==================[ КОНСТРУКТОРЫ (КОНЕЦ)  ]==========================


        #region// ==================[ СВОЙСТВА (НАЧАЛО) ]==============================

        //// СВОЙСТВО [1]: "Имя" (Name). АВТОСВОЙСТВО.
        //public string Name { get; set; }
        //// Конец СВОЙСТВА [1]: "Имя" (Name). АВТОСВОЙСТВО.


        //// СВОЙСТВО [2]: "Фамилия" (Surname). АВТОСВОЙСТВО.
        //public string Surname { get; set; }
        //// Конец СВОЙСТВА [2]: "Фамилия" (Surname). АВТОСВОЙСТВО.


        //// СВОЙСТВО [3]: "Идентификатор" (ID). АВТОСВОЙСТВО.
        //public int ID { get; set; }
        //// Конец СВОЙСТВА [3]: "Идентификатор" (ID). АВТОСВОЙСТВО.


        //// СВОЙСТВО [4]: "Возраст" (Age). АВТОСВОЙСТВО.
        //public int Age { get; set; }
        //// Конец СВОЙСТВА [4]: "Возраст" (Age). АВТОСВОЙСТВО.


        // СВОЙСТВО [?]: "Имя" (Name).
        public string Name
        {
            get // Для ЧТЕНИЯ значения.
            {
                return name;
            } // Конец 'get'.
            //set // Для ЗАПИСИ значения. 
            //{
            //    name = value;
            //} // Конец 'set'.
        } // Конец СВОЙСТВА [?]: "Имя" (Name).


        // СВОЙСТВО [?]: "Фамилия" (Surname).
        public string Surname
        {
            get // Для ЧТЕНИЯ значения.
            {
                return surname;
            } // Конец 'get'.
            //set // Для ЗАПИСИ значения. 
            //{
            //    surname = value;
            //} // Конец 'set'.
        } // Конец СВОЙСТВА [?]: "Фамилия" (Surname).


        // СВОЙСТВО [?]: "Идентификатор" (ID).
        public int ID
        {
            get // Для ЧТЕНИЯ значения.
            {
                return id;
            } // Конец 'get'.
            //set // Для ЗАПИСИ значения. 
            //{
            //    id = value;
            //} // Конец 'set'.
        } // Конец СВОЙСТВА [?]: "Идентификатор" (ID).


        // СВОЙСТВО [?]: "Возраст" (Age).
        public int Age
        {
            get // Для ЧТЕНИЯ значения.
            {
                return age;
            } // Конец 'get'.
            //set // Для ЗАПИСИ значения. 
            //{
            //    age = value;
            //} // Конец 'set'.
        } // Конец СВОЙСТВА [?]: "Возраст" (Age).


        #endregion
        // ==================[ СВОЙСТВА (КОНЕЦ)  ]==============================


    } // Конец КЛАССА [1]: "Персона 2" (Person2).


    #endregion
    // ==================[ КЛАССЫ (НАЧАЛО) ]================================


} // Конец ПРОСТРАНСТВА ИМЕН [1]: "Лабораторная работа № 2. Классы в C#" (Lab2_Classes).


// ========================================================================================================================================== //
// КОНЕЦ ФАЙЛА (Person2.cs)
// ========================================================================================================================================== //