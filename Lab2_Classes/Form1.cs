// ========================================================================================================================================== //
// НАЧАЛО ФАЙЛА (Form1.cs)
// ========================================================================================================================================== //


// =========[ ИНФОРМАЦИЯ О ФАЙЛЕ (НАЧАЛО) ]================================================================================================== //

// Тип работы  : Практическая работа (Практична робота)
// Тема работы : Классы в C# (Класи в C#)
// Студент     : Будюка Тимур (Timur Budyuka)
// Группа      : 1-3м (Комп'ютерні науки, ФІТ)

// ОПИСАНИЕ:
// Файл для работы с Формой 1 (Form1).

// =========[ ИНФОРМАЦИЯ О ФАЙЛЕ (КОНЕЦ)  ]================================================================================================== //


// =========[ ПОДКЛЮЧАЕМЫЕ БИБЛИОТЕКИ, МОДУЛИ, КОМПОНЕНТЫ (НАЧАЛО) ]========================================================================= //
// using [подключаемая-библиотека-модуль-компонент];
// -----[ СИСТЕМНЫЕ/SYSTEM (НАЧАЛО) ]:
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
// -----[ СИСТЕМНЫЕ/SYSTEM (КОНЕЦ)  ].
// =========[ ПОДКЛЮЧАЕМЫЕ БИБЛИОТЕКИ, МОДУЛИ, КОМПОНЕНТЫ (КОНЕЦ)  ]========================================================================= //





// ПРОСТРАНСТВО ИМЕН [1]: "Лабораторная работа № 2. Классы в C#" (Lab2_Classes).
namespace Lab2_Classes
{
    
    #region// ==================[ КЛАССЫ (НАЧАЛО) ]================================

    // КЛАСС [1]: "ФОРМА 1" (Form1).
    // НАСЛЕДУЕТ: класс 'Form'.
    public partial class Form1 : Form
    {


        List<User1> users = new List<User1>(); // Список пользователей класса 'Пользователь' (User)


        #region// ==================[ КОНСТРУКТОРЫ (НАЧАЛО) ]==========================


        // КОНСТРУКТОР [1]: "ФОРМА 1" (Form1). БЕЗ ПАРАМЕТРОВ.
        // =========[ ОПИСАНИЕ ]================================================
        // [описание] ...
        // =====================================================================
        // =========[ ДОПОЛНИТЕЛЬНАЯ ИНФОРМАЦИЯ ]===============================
        // Принцип    : [описание-принципа]
        // Пример     : [описание-примера]
        // Примечание : [описание-примечания]
        // Ограничения: [описание-ограничений]
        // Исключения : [описание-исключений]
        // Ошибки     : [описание-ошибок]
        // =====================================================================
        public Form1()
        {
            InitializeComponent(); // Инициализация компонентов

            FormBorderStyle = FormBorderStyle.FixedDialog; // Фиксированное диалоговое окно

            richTextBox1.ReadOnly = true; // Включить режим "Только чтение" для текстового блока
            richTextBox1.Clear(); // Очистка текстового блока

            users.Add(new User1() { Name = $"Сергей", Surname = $"Петренко", ID = 1, Age = 23 });
            users.Add(new User1() { Name = $"Владимир", Surname = $"Смирнов", ID = 2, Age = 29 });
            users.Add(new User1() { Name = $"Ирина", Surname = $"Романенко", ID = 6, Age = 24 });
            users.Add(new User1() { Name = $"Екатерина", Surname = $"Сергиенко", ID = 11, Age = 19 });
            users.Add(new User1() { Name = $"Григорий", Surname = $"Новак", ID = 23, Age = 31 });
            users.Add(new User1() { Name = $"Юлия", Surname = $"Павленко", ID = 24, Age = 24 });

            comboBox1.Items.Add($"Имя (Name)");
            comboBox1.Items.Add($"Фамилия (Surname)");
            comboBox1.Items.Add($"Идентификатор (ID)");
            comboBox1.Items.Add($"Возраст (Age)");

            comboBox1.DropDownStyle = ComboBoxStyle.DropDownList; // Выпадающий список

            //textBox5.KeyPress += (senver, e) => e.Handled = true;

            // Настройка ввода допустимых значений для поля 'Идентификатор' (ID): [только цифры + backspace]
            textBox3.KeyPress += (senver, e) => { if ( ((e.KeyChar < '0') || (e.KeyChar > '9')) && (e.KeyChar != 8) ) e.Handled = true; };

            // Настройка ввода допустимых значений для поля 'Возраст' (Age): [только цифры + backspace]
            textBox4.KeyPress += (senver, e) => { if (((e.KeyChar < '0') || (e.KeyChar > '9')) && (e.KeyChar != 8)) e.Handled = true; };

        } // Конец КОНСТРУКТОРА [1]: "ФОРМА 1" (Form1). БЕЗ ПАРАМЕТРОВ.


        #endregion
        // ==================[ КОНСТРУКТОРЫ (КОНЕЦ)  ]==========================




        #region// ==================[ МЕТОДЫ (НАЧАЛО) ]================================


        // МЕТОД [[номер-метода]]: "[название]" (MethodName). БЕЗ ПАРАМЕТРОВ.
        // =========[ ОПИСАНИЕ ]================================================
        // [описание] ...
        // =====================================================================
        // =========[ ДОПОЛНИТЕЛЬНАЯ ИНФОРМАЦИЯ ]===============================
        // Принцип    : [описание-принципа]
        // Пример     : [описание-примера]
        // Примечание : [описание-примечания]
        // Ограничения: [описание-ограничений]
        // Исключения : [описание-исключений]
        // Ошибки     : [описание-ошибок]
        // =====================================================================
        //public void MethodName()
        //{
        //    // ...
        //} // Конец МЕТОДА [[номер-метода]]: "[название]" (MethodName). БЕЗ ПАРАМЕТРОВ.


        // МЕТОД [[номер-метода]]: "[названиеМетода]" (MethodName).
        // =========[ ОПИСАНИЕ ]================================================
        // [описание] ...
        // =====================================================================
        // =========[ ДОПОЛНИТЕЛЬНАЯ ИНФОРМАЦИЯ ]===============================
        // Принцип    : [описание-принципа]
        // Пример     : [описание-примера]
        // Примечание : [описание-примечания]
        // Ограничения: [описание-ограничений]
        // Исключения : [описание-исключений]
        // Ошибки     : [описание-ошибок]
        // =====================================================================
        // =========[ ФОРМАЛЬНЫЕ ПАРАМЕТРЫ ]====================================
        // 'param1' : [описание-параметра]
        // 'param2' : [описание-параметра]
        // =====================================================================
        //public void MethodName(int param1, int param2)
        //{

        //    // ...
        //    //return 0;
        //} // Конец МЕТОДА [[номер-метода]]: "[названиеМетода]" (MethodName).


        #endregion
        // ==================[ МЕТОДЫ (КОНЕЦ)  ]================================




        #region// ==================[ МЕТОДЫ-СОБЫТИЯ (НАЧАЛО) ]========================


        // МЕТОД-СОБЫТИЕ [1]: "Кнопка1_Нажатие" (button1_Click). КНОПКА: "Выполнить (задание 1)" (Execute (task 1)).
        // =========[ ОПИСАНИЕ ]================================================
        // Выполнеине действий для задания 1 при нажатии на Кнопку 1 (button1).
        // =====================================================================
        // =========[ ДОПОЛНИТЕЛЬНАЯ ИНФОРМАЦИЯ ]===============================
        // Принцип    : [описание-принципа]
        // Пример     : [описание-примера]
        // Примечание : [описание-примечания]
        // Ограничения: [описание-ограничений]
        // Исключения : [описание-исключений]
        // Ошибки     : [описание-ошибок]
        // =====================================================================
        // =========[ ФОРМАЛЬНЫЕ ПАРАМЕТРЫ ]====================================
        // 'sender' : отправитель (объект)
        // 'e'      : события (объекты)
        // =====================================================================
        private void button1_Click(object sender, EventArgs e)
        {

            List<Person1> persons = new List<Person1>();

            for (int i = 0; i < 3; i++)
                persons.Add(new Person1());

            MessageBox.Show($"[Задание 1]:\n\n" +
                $"Количество созданных объектов:\n\t{persons.Count} (в счётчике списка 'persons'),\n\t{Person1.Count} (в счётчике класса 'Person1').");

            richTextBox1.AppendText($"[Задание 1]:\n\n");
            richTextBox1.AppendText($"Количество созданных объектов:\n\t{persons.Count} (в счётчике списка 'persons'),\n\t{Person1.Count} (в счётчике класса 'Person1').\n\n");
            richTextBox1.AppendText($"Операция успешно выполнена!\n\n");
            // ...
        } // Конец МЕТОДА-СОБЫТИЕ [1]: "Кнопка1_Нажатие" (button1_Click). КНОПКА: "Выполнить (задание 1)" (Execute (task 1)).


        // МЕТОД-СОБЫТИЕ [2]: "Кнопка2_Нажатие" (button2_Click). КНОПКА: "Искать (задание 2)" (Search (task 2)).
        // =========[ ОПИСАНИЕ ]================================================
        // Выполнеине действий для задания 2 при нажатии на Кнопку 8 (button8).
        // Выполняет поиск и проверяет наличие или существование объекта класса 
        // 'Пользователь' (User) по соответствующему ID (идентификатору).
        // =====================================================================
        // =========[ ДОПОЛНИТЕЛЬНАЯ ИНФОРМАЦИЯ ]===============================
        // Принцип    : [описание-принципа]
        // Пример     : [описание-примера]
        // Примечание : [описание-примечания]
        // Ограничения: [описание-ограничений]
        // Исключения : [описание-исключений]
        // Ошибки     : [описание-ошибок]
        // =====================================================================
        // =========[ ФОРМАЛЬНЫЕ ПАРАМЕТРЫ ]====================================
        // 'sender' : отправитель (объект)
        // 'e'      : события (объекты)
        // =====================================================================
        private void button2_Click(object sender, EventArgs e)
        {
            List<User1> res_search = new List<User1>(); // Список результатов поиска

            richTextBox1.AppendText($"[Задание 2]:\n\n");

            if (res_search.Count > 0)
                res_search.Clear();

            // УСЛОВИЕ: Если количество объектов в списке класса 'Пользователь' (User) РАВНО 0 (нулю)
            if (users.Count == 0)
            {
                richTextBox1.AppendText($"Данные не найдены!\n\n");
            } // Конец 'if'.
            else
            {

                for (int i = 0; i < users.Count; i++)
                {
                    // ВЫБОР: Выбор одного значения из списка (comboBox)
                    switch (comboBox1.SelectedItem)
                    {
                        case "Имя (Name)":
                            {

                                // УСЛОВИЕ: Если 'Name' объекта из списка 'users' РАВНО значению из текстового поля 'Поиск' (textBox5)
                                if (users[i].Name.ToString() == textBox5.Text)
                                {
                                    res_search.Add(users[i]);
                                }
                                break;
                            }

                        case "Фамилия (Surname)":
                            {
                                // УСЛОВИЕ: Если 'Surname' объекта из списка 'users' РАВНО значению из текстового поля 'Поиск' (textBox5)
                                if (users[i].Surname.ToString() == textBox5.Text)
                                {
                                    res_search.Add(users[i]);
                                }
                                break;
                            }

                        case "Идентификатор (ID)":
                            {
                                // УСЛОВИЕ: Если 'ID' объекта из списка 'users' РАВНО значению из текстового поля 'Поиск' (textBox5)
                                if (users[i].ID.ToString() == textBox5.Text)
                                {
                                    res_search.Add(users[i]);
                                }
                                break;
                            }

                        case "Возраст (Age)":
                            {
                                // УСЛОВИЕ: Если 'Age' объекта из списка 'users' РАВНО значению из текстового поля 'Поиск' (textBox5)
                                if (users[i].Age.ToString() == textBox5.Text)
                                {
                                    res_search.Add(users[i]);
                                }
                                break;
                            }

                    } // Конец 'switch'.

                } // Конец 'for'.

                // УСЛОВИЕ: Если количество результатов поиска РАВНО 0 (нулю)
                if (res_search.Count == 0)
                {
                    MessageBox.Show($"Объекты не найдены!");
                    richTextBox1.AppendText($"Объекты не найдены!\n\n");
                } // Конец 'if'.
                else
                {
                    MessageBox.Show($"Данные успешно найдены!\n" +
                        $"Найденных объектов: {res_search.Count}");

                    richTextBox1.AppendText($"Данные успешно найдены!\n");
                    richTextBox1.AppendText($"Количество найденных объектов: {res_search.Count}\n\n");

                    for (int i = 0; i < res_search.Count; i++)
                    {
                        richTextBox1.AppendText($"Объект: 'User1' [{i + 1}]\n");
                        richTextBox1.AppendText($"Имя (Name): {res_search[i].Name}\n");
                        richTextBox1.AppendText($"Фамилия (Surname): {res_search[i].Surname}\n");
                        richTextBox1.AppendText($"Идентификатор (ID): {res_search[i].ID}\n");
                        richTextBox1.AppendText($"Возраст (Age): {res_search[i].Age}\n\n");
                    } // Конец 'for'.
                } // Конец 'else'.

            } // Конец 'else'.

            richTextBox1.AppendText($"Операция успешно выполнена!\n\n");

        } // Конец МЕТОДА-СОБЫТИЕ [2]: "Кнопка2_Нажатие" (button2_Click). КНОПКА: "Искать (задание 2)" (Search (task 2)).


        // МЕТОД-СОБЫТИЕ [3]: "Кнопка3_Нажатие" (button3_Click). КНОПКА: "Выполнить (задание 3)" (Execute (task 3)).
        // =========[ ОПИСАНИЕ ]================================================
        // Выполнеине действий для задания 3 при нажатии на Кнопку 3 (button3).
        // =====================================================================
        // =========[ ДОПОЛНИТЕЛЬНАЯ ИНФОРМАЦИЯ ]===============================
        // Принцип    : [описание-принципа]
        // Пример     : [описание-примера]
        // Примечание : [описание-примечания]
        // Ограничения: [описание-ограничений]
        // Исключения : [описание-исключений]
        // Ошибки     : [описание-ошибок]
        // =====================================================================
        // =========[ ФОРМАЛЬНЫЕ ПАРАМЕТРЫ ]====================================
        // 'sender' : отправитель (объект)
        // 'e'      : события (объекты)
        // =====================================================================
        private void button3_Click(object sender, EventArgs e)
        {

            Employee emp = new Employee() { salary = 10000 };

            double premium = 5000;

            Employee emp1 = emp + premium;

            richTextBox1.AppendText($"[Задание 3]:\n\n");

            richTextBox1.AppendText($"Объект: 'Employee'\n");
            richTextBox1.AppendText($"Зарплата: {emp.salary}\n");
            richTextBox1.AppendText($"Премия: {premium}\n");
            richTextBox1.AppendText($"Сумма: {emp.salary} + {premium} = {emp1.Sum}\n\n");

            richTextBox1.AppendText($"Операция успешно выполнена!\n\n");

        } // Конец МЕТОДА-СОБЫТИЕ [3]: "Кнопка3_Нажатие" (button3_Click). КНОПКА: "Выполнить (задание 3)" (Execute (task 3)).


        // МЕТОД-СОБЫТИЕ [4]: "Кнопка4_Нажатие" (button4_Click). КНОПКА: "Выполнить (задание 4)" (Execute (task 4)).
        // =========[ ОПИСАНИЕ ]================================================
        // Выполнеине действий для задания 4 при нажатии на Кнопку 4 (button1).
        // =====================================================================
        // =========[ ДОПОЛНИТЕЛЬНАЯ ИНФОРМАЦИЯ ]===============================
        // Принцип    : [описание-принципа]
        // Пример     : [описание-примера]
        // Примечание : [описание-примечания]
        // Ограничения: [описание-ограничений]
        // Исключения : [описание-исключений]
        // Ошибки     : [описание-ошибок]
        // =====================================================================
        // =========[ ФОРМАЛЬНЫЕ ПАРАМЕТРЫ ]====================================
        // 'sender' : отправитель (объект)
        // 'e'      : события (объекты)
        // =====================================================================
        private void button4_Click(object sender, EventArgs e)
        {

            List<Person2> persons = new List<Person2>();

            persons.Add(new Person2()); // Использование конструктора без параметров
            persons.Add(new Person2($"Дмитрий", $"Жданов", 2)); // Использование конструктора с параметрами № 1
            persons.Add(new Person2($"Евгения", $"Волкова", 3, 20)); // Использование конструктора с параметрами № 2

            richTextBox1.AppendText($"[Задание 4]:\n\n");

            for (int i = 0; i < persons.Count; i++)
            {
                richTextBox1.AppendText($"Объект: 'Person2' [{i+1}]\n");
                richTextBox1.AppendText($"Имя (Name): {persons[i].Name}\n");
                richTextBox1.AppendText($"Фамилия (Surname): {persons[i].Surname}\n");
                richTextBox1.AppendText($"Идентификатор (ID): {persons[i].ID}\n");
                richTextBox1.AppendText($"Возраст (Age): {persons[i].Age}\n\n");
            } // Конец 'for'.

            richTextBox1.AppendText($"Операция успешно выполнена!\n\n");

        } // Конец МЕТОДА-СОБЫТИЕ [4]: "Кнопка4_Нажатие" (button4_Click). КНОПКА: "Выполнить (задание 4)" (Execute (task 4)).


        // МЕТОД-СОБЫТИЕ [5]: "Кнопка5_Нажатие" (button5_Click). КНОПКА: "Выполнить (задание 5)" (Execute (task 5)).
        // =========[ ОПИСАНИЕ ]================================================
        // Выполнеине действий для задания 5 при нажатии на Кнопку 5 (button5).
        // =====================================================================
        // =========[ ДОПОЛНИТЕЛЬНАЯ ИНФОРМАЦИЯ ]===============================
        // Принцип    : [описание-принципа]
        // Пример     : [описание-примера]
        // Примечание : [описание-примечания]
        // Ограничения: [описание-ограничений]
        // Исключения : [описание-исключений]
        // Ошибки     : [описание-ошибок]
        // =====================================================================
        // =========[ ФОРМАЛЬНЫЕ ПАРАМЕТРЫ ]====================================
        // 'sender' : отправитель (объект)
        // 'e'      : события (объекты)
        // =====================================================================
        private void button5_Click(object sender, EventArgs e)
        {

            User2 user = new User2();

            richTextBox1.AppendText($"[Задание 5]:\n\n");

            richTextBox1.AppendText($"Объект: 'User2'\n");
            richTextBox1.AppendText($"Имя (Name): {user.Name}\n");
            richTextBox1.AppendText($"Фамилия (Surname): {user.Surname}\n");
            richTextBox1.AppendText($"Идентификатор (ID): {user.ID}\n");
            richTextBox1.AppendText($"Возраст (Age): {user.Age}\n\n");

            richTextBox1.AppendText($"Операция успешно выполнена!\n\n");

        } // Конец МЕТОДА-СОБЫТИЕ [5]: "Кнопка5_Нажатие" (button5_Click). КНОПКА: "Выполнить (задание 5)" (Execute (task 5)).


        // МЕТОД-СОБЫТИЕ [6]: "Кнопка6_Нажатие" (button6_Click). КНОПКА: "Выполнить (задание 6)" (Execute (task 6)).
        // =========[ ОПИСАНИЕ ]================================================
        // Выполнеине действий для задания 6 при нажатии на Кнопку 6 (button6).
        // =====================================================================
        // =========[ ДОПОЛНИТЕЛЬНАЯ ИНФОРМАЦИЯ ]===============================
        // Принцип    : [описание-принципа]
        // Пример     : [описание-примера]
        // Примечание : [описание-примечания]
        // Ограничения: [описание-ограничений]
        // Исключения : [описание-исключений]
        // Ошибки     : [описание-ошибок]
        // =====================================================================
        // =========[ ФОРМАЛЬНЫЕ ПАРАМЕТРЫ ]====================================
        // 'sender' : отправитель (объект)
        // 'e'      : события (объекты)
        // =====================================================================
        private void button6_Click(object sender, EventArgs e)
        {

            List<Customer> customers = new List<Customer>();

            customers.Add(new Customer() { Name = $"Сергей", Surname = $"Романенко", Age = 30, LCN = "8000 4124 2564", SCO = 10000.0 });
            customers.Add(new Customer() { Name = $"Дмитрий", Surname = $"Сергиенко", Age = 29, LCN = "8000 5926 7164", SCO = 5000.0 });
            customers.Add(new Customer() { Name = $"Антон", Surname = $"Голубев", Age = 24, LCN = "8000 6144 9137", SCO = 1000.0 });
            customers.Add(new Customer() { Name = $"Наталья", Surname = $"Клименко", Age = 21, LCN = "8000 4134 8274", SCO = 750.0 });

            richTextBox1.AppendText($"[Задание 6]:\n\n");

            for (int i = 0; i < customers.Count; i++)
            {
                customers[i].getDiscount(0.5); // Применить скудку в 50% (процентов)
                customers[i].showInfo(); // Показать информацию о покупателе
            } // Конец 'for'.

            richTextBox1.AppendText($"Операция успешно выполнена!\n\n");

        } // Конец МЕТОДА-СОБЫТИЕ [6]: "Кнопка6_Нажатие" (button6_Click). КНОПКА: "Выполнить (задание 6)" (Execute (task 6)).


        // МЕТОД-СОБЫТИЕ [7]: "Кнопка7_Нажатие" (button7_Click). КНОПКА: "Добавить (задание 2)" (Add (task 2)).
        // =========[ ОПИСАНИЕ ]================================================
        // Выполнеине действий для задания 2 при нажатии на Кнопку 7 (button7).
        // Создает объект с параметрами (Имя, Фамилия, ID, Возраст), заполняет 
        // параметры объекта значениями из текстовых полей и добавляет его в 
        // список объектов класса 'Пользователь' (User).
        // =====================================================================
        // =========[ ДОПОЛНИТЕЛЬНАЯ ИНФОРМАЦИЯ ]===============================
        // Принцип    : [описание-принципа]
        // Пример     : [описание-примера]
        // Примечание : [описание-примечания]
        // Ограничения: [описание-ограничений]
        // Исключения : [описание-исключений]
        // Ошибки     : [описание-ошибок]
        // =====================================================================
        // =========[ ФОРМАЛЬНЫЕ ПАРАМЕТРЫ ]====================================
        // 'sender' : отправитель (объект)
        // 'e'      : события (объекты)
        // =====================================================================
        private void button7_Click(object sender, EventArgs e)
        {

            // УСЛОВИЕ: Если ХОТЯ БЫ ОДНО текстовое поле (Имя, Фамилия, ID, Возраст) ПУСТОЕ, то
            if ( (textBox1.Text == $"") || (textBox2.Text == $"") || (textBox3.Text == $"") || (textBox4.Text == $"") )
            {
                //MessageBox.Show($"Для создания Пользователя (User) необходимо заполнить все поля!");
                richTextBox1.AppendText($"Для создания Пользователя (User) необходимо заполнить все поля!\n\n");
            } // Конец 'if'.
            else
            {
                users.Add(new User1() { Name = textBox1.Text, Surname = textBox2.Text, ID = Convert.ToInt32(textBox3.Text), Age = Convert.ToInt32(textBox4.Text) });

                textBox1.Text = $"";
                textBox2.Text = $"";
                textBox3.Text = $"";
                textBox4.Text = $"";

                //MessageBox.Show($"Объект '{users[users.Count]}' (User1) добавлен в список объектов класса 'Пользователь' (User).");
                richTextBox1.AppendText($"Данные успешно внесены! Объект успешно создан!\n");
                richTextBox1.AppendText($"Объект добавлен в список объектов класса 'Пользователь' (User).\n\n");

            } // Конец 'else'.

        } // Конец МЕТОДА-СОБЫТИЕ [7]: "Кнопка7_Нажатие" (button7_Click). КНОПКА: "Добавить (задание 2)" (Add (task 2)).


        // МЕТОД-СОБЫТИЕ [8]: "Кнопка8_Нажатие" (button8_Click). КНОПКА: "Очистить (протокол)" (Clear (protocol)).
        // =========[ ОПИСАНИЕ ]================================================
        // Выполнеине действий для протокола при нажатии на Кнопку 9 (button9).
        // Очищает протокол.
        // =====================================================================
        // =========[ ДОПОЛНИТЕЛЬНАЯ ИНФОРМАЦИЯ ]===============================
        // Принцип    : [описание-принципа]
        // Пример     : [описание-примера]
        // Примечание : [описание-примечания]
        // Ограничения: [описание-ограничений]
        // Исключения : [описание-исключений]
        // Ошибки     : [описание-ошибок]
        // =====================================================================
        // =========[ ФОРМАЛЬНЫЕ ПАРАМЕТРЫ ]====================================
        // 'sender' : отправитель (объект)
        // 'e'      : события (объекты)
        // =====================================================================
        private void button8_Click(object sender, EventArgs e)
        {
            richTextBox1.Clear(); // Очитстить текстовое поле (блок)
        } // Конец МЕТОДА-СОБЫТИЕ [8]: "Кнопка8_Нажатие" (button8_Click). КНОПКА: "Очистить (протокол)" (Clear (protocol)).


        // МЕТОД-СОБЫТИЕ [9]: "Кнопка9_Нажатие" (button9_Click). КНОПКА: "название" (название).
        // =========[ ОПИСАНИЕ ]================================================
        // [описание] ...
        // =====================================================================
        // =========[ ДОПОЛНИТЕЛЬНАЯ ИНФОРМАЦИЯ ]===============================
        // Принцип    : [описание-принципа]
        // Пример     : [описание-примера]
        // Примечание : [описание-примечания]
        // Ограничения: [описание-ограничений]
        // Исключения : [описание-исключений]
        // Ошибки     : [описание-ошибок]
        // =====================================================================
        // =========[ ФОРМАЛЬНЫЕ ПАРАМЕТРЫ ]====================================
        // 'sender' : отправитель (объект)
        // 'e'      : события (объекты)
        // =====================================================================
        private void button9_Click(object sender, EventArgs e)
        {
            
        } // Конец МЕТОДА-СОБЫТИЕ [9]: "Кнопка9_Нажатие" (button9_Click). КНОПКА: "название" (название).



        #endregion
        // ==================[ МЕТОДЫ-СОБЫТИЯ (КОНЕЦ)  ]========================


    } // Конец КЛАССА [1]: "ФОРМА 1" (Form1).

    #endregion// ==================[ КЛАССЫ (НАЧАЛО) ]================================




} // Конец ПРОСТРАНСТВА ИМЕН [1]: "Лабораторная работа № 2. Классы в C#" (Lab2_Classes).


// ========================================================================================================================================== //
// КОНЕЦ ФАЙЛА (Form1.cs)
// ========================================================================================================================================== //