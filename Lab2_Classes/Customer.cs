// ========================================================================================================================================== //
// НАЧАЛО ФАЙЛА (Customer.cs)
// ========================================================================================================================================== //


// =========[ ИНФОРМАЦИЯ О ФАЙЛЕ (НАЧАЛО) ]================================================================================================== //

// Тип работы  : Практическая работа (Практична робота)
// Тема работы : Классы в C# (Класи в C#)
// Студент     : Будюка Тимур (Timur Budyuka)
// Группа      : 1-3м (Комп'ютерні науки, ФІТ)

// ОПИСАНИЕ:
// Файл класса "Покупатель" (Customer).

// =========[ ИНФОРМАЦИЯ О ФАЙЛЕ (КОНЕЦ)  ]================================================================================================== //


// =========[ ПОДКЛЮЧАЕМЫЕ БИБЛИОТЕКИ, МОДУЛИ, КОМПОНЕНТЫ (НАЧАЛО) ]========================================================================= //
// using [подключаемая-библиотека-модуль-компонент];
// -----[ СИСТЕМНЫЕ/SYSTEM (НАЧАЛО) ]:
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
// -----[ СИСТЕМНЫЕ/SYSTEM (КОНЕЦ)  ].
// =========[ ПОДКЛЮЧАЕМЫЕ БИБЛИОТЕКИ, МОДУЛИ, КОМПОНЕНТЫ (КОНЕЦ)  ]========================================================================= //


// ПРОСТРАНСТВО ИМЕН [1]: "Лабораторная работа № 2. Классы в C#" (Lab2_Classes).
namespace Lab2_Classes
{

    #region// ==================[ КЛАССЫ (НАЧАЛО) ]================================

    // КЛАСС [1]: "Покупатель" (Customer).
    class Customer
    {

        // =========[ ПОЛЯ КЛАССА (НАЧАЛО) ]====================================
        // [модификатор-доступа] [тип] [имя-поля (параметра)];
        string name = $"";    // ПОЛЕ: "Имя"
        string surname = $""; // ПОЛЕ: "Фамилия"
        int age = 0;          // ПОЛЕ: "Возраст"
        string lcn = $"";     // ПОЛЕ: "Номер карты лояльности" (Loyalty Card Number, LCN). 12 цифр (Форматы: XXXX-XXXX-XXXX, XXXX XXXX XXXX)
        double sco = 5000.0;  // ПОЛЕ: "Сумма текущего заказа" (Sum of Current Order / Amount of Current Order, SCO / ACO )

        // =========[ ПОЛЯ КЛАССА (КОНЕЦ)  ]====================================



        #region// ==================[ КОНСТРУКТОРЫ (НАЧАЛО) ]==========================


        // КОНСТРУКТОР [1]: "Покупатель" (Customer). БЕЗ ПАРАМЕТРОВ.
        // =========[ ОПИСАНИЕ ]================================================
        // Создает объект Покупатель (Customer).
        // =====================================================================
        // =========[ ДОПОЛНИТЕЛЬНАЯ ИНФОРМАЦИЯ ]===============================
        // Принцип    : [описание-принципа]
        // Пример     : [описание-примера]
        // Примечание : [описание-примечания]
        // Ограничения: [описание-ограничений]
        // Исключения : [описание-исключений]
        // Ошибки     : [описание-ошибок]
        // =====================================================================
        public Customer()
        {
            // ...
        } // Конец КОНСТРУКТОРА [1]: "Покупатель" (Customer). БЕЗ ПАРАМЕТРОВ.


        // КОНСТРУКТОР [2]: "Покупатель" (Customer).
        // =========[ ОПИСАНИЕ ]================================================
        // [описание] ...
        // =====================================================================
        // =========[ ДОПОЛНИТЕЛЬНАЯ ИНФОРМАЦИЯ ]===============================
        // Принцип    : [описание-принципа]
        // Пример     : [описание-примера]
        // Примечание : [описание-примечания]
        // Ограничения: [описание-ограничений]
        // Исключения : [описание-исключений]
        // Ошибки     : [описание-ошибок]
        // =====================================================================
        // =========[ ФОРМАЛЬНЫЕ ПАРАМЕТРЫ ]====================================
        // 'param1' : [описание-параметра]
        // 'param2' : [описание-параметра]
        // =====================================================================
        //public Customer(int param1, int param2) // <-- ref [тип] [параметр]
        //{
        //    // ...
        //} // Конец КОНСТРУКТОРА [2]: "Покупатель" (Customer).

        #endregion
        // ==================[ КОНСТРУКТОРЫ (КОНЕЦ)  ]==========================


        #region// ==================[ СВОЙСТВА (НАЧАЛО) ]==============================

        // СВОЙСТВО [1]: "Имя" (Name). АВТОСВОЙСТВО.
        public string Name { get; set; }
        // Конец СВОЙСТВА [1]: "Имя" (Name). АВТОСВОЙСТВО.


        // СВОЙСТВО [2]: "Фамилия" (Surname). АВТОСВОЙСТВО.
        public string Surname { get; set; }
        // Конец СВОЙСТВА [2]: "Фамилия" (Surname). АВТОСВОЙСТВО.


        // СВОЙСТВО [3]: "Возраст" (Age). АВТОСВОЙСТВО.
        public int Age { get; set; }
        // Конец СВОЙСТВА [3]: "Возраст" (Age). АВТОСВОЙСТВО.


        // СВОЙСТВО [4]: "Номер карты лояльности" (LCN). АВТОСВОЙСТВО.
        public string LCN { get; set; }
        // Конец СВОЙСТВА [4]: "Номер карты лояльности" (LCN). АВТОСВОЙСТВО.


        //// СВОЙСТВО [5]: "Сумма текущего заказа" (SCO). АВТОСВОЙСТВО.
        //public double SCO { get; set; }
        //// Конец СВОЙСТВА [5]: "Сумма текущего заказа" (SCO). АВТОСВОЙСТВО.


        //// СВОЙСТВО [1]: "Имя" (Name).
        //public string Name
        //{
        //    get // Для ЧТЕНИЯ значения.
        //    {
        //        return name;
        //    } // Конец 'get'.
        //    //set // Для ЗАПИСИ значения.
        //    //{
        //    //    name = value;
        //    //} // Конец 'set'.
        //} // Конец СВОЙСТВА [1]: "Имя" (Name).


        //// СВОЙСТВО [2]: "Фамилия" (Surname).
        //public string Surname
        //{
        //    get // Для ЧТЕНИЯ значения.
        //    {
        //        return surname;
        //    } // Конец 'get'.
        //    //set // Для ЗАПИСИ значения.
        //    //{
        //    //    surname = value;
        //    //} // Конец 'set'.
        //} // Конец СВОЙСТВА [2]: "Фамилия" (Surname).


        //// СВОЙСТВО [3]: "Возраст" (Age).
        //public int Age
        //{
        //    get // Для ЧТЕНИЯ значения.
        //    {
        //        return age;
        //    } // Конец 'get'.
        //    //set // Для ЗАПИСИ значения.
        //    //{
        //    //    age = value;
        //    //} // Конец 'set'.
        //} // Конец СВОЙСТВА [3]: "Возраст" (Age).


        //// СВОЙСТВО [4]: "Номер карты лояльности" (LCN).
        //public string LCN
        //{
        //    get // Для ЧТЕНИЯ значения.
        //    {
        //        return lcn;
        //    } // Конец 'get'.
        //    //set // Для ЗАПИСИ значения.
        //    //{
        //    //    lcn = value;
        //    //} // Конец 'set'.
        //} // Конец СВОЙСТВА [4]: "Номер карты лояльности" (LCN).


        // СВОЙСТВО [5]: "Сумма текущего заказа" (SCO).
        public double SCO
        {
            get // Для ЧТЕНИЯ значения.
            {
                return sco;
            } // Конец 'get'.
            set // Для ЗАПИСИ значения.
            {
                sco = value;
            } // Конец 'set'.
        } // Конец СВОЙСТВА [5]: "Сумма текущего заказа" (SCO).


        #endregion
        // ==================[ СВОЙСТВА (КОНЕЦ)  ]==============================


        #region// ==================[ МЕТОДЫ (НАЧАЛО) ]================================


        // МЕТОД [1]: "Показать информацию (о покупателе)" (showInfo). БЕЗ ПАРАМЕТРОВ.
        // =========[ ОПИСАНИЕ ]================================================
        // Показывает информацию о покупателе (Customer) выводя на экран всплывающее сообщение.
        // =====================================================================
        // =========[ ДОПОЛНИТЕЛЬНАЯ ИНФОРМАЦИЯ ]===============================
        // Принцип    : [описание-принципа]
        // Пример     : [описание-примера]
        // Примечание : [описание-примечания]
        // Ограничения: [описание-ограничений]
        // Исключения : [описание-исключений]
        // Ошибки     : [описание-ошибок]
        // =====================================================================
        public void showInfo()
        {

            MessageBox.Show($"Объект: 'Customer'\n\n" +
                $"Имя (Name): {Name}\n" +
                $"Фамилия (Surname): {Surname}\n" +
                $"Возраст (Age): {Age}\n" +
                $"Номер карты лояльности (LCN): {LCN}\n" +
                $"Сумма текущего заказа (SCO): {SCO}", $"Информация о покупателе"); // MessageBoxButtons.OK, MessageBoxIcon.Information

            // ...
        } // Конец МЕТОДА [1]: "Показать информацию (о покупателе)" (showInfoshowInfo). БЕЗ ПАРАМЕТРОВ.


        // МЕТОД [2]: "Получить скидку" (getDiscount).
        // =========[ ОПИСАНИЕ ]================================================
        // Позволяет применить скидку (Discount) для суммы текущего заказа.
        // =====================================================================
        // =========[ ДОПОЛНИТЕЛЬНАЯ ИНФОРМАЦИЯ ]===============================
        // Принцип    : [описание-принципа]
        // Пример     : [описание-примера]
        // Примечание : [описание-примечания]
        // Ограничения: [описание-ограничений]
        // Исключения : [описание-исключений]
        // Ошибки     : [описание-ошибок]
        // =====================================================================
        // =========[ ФОРМАЛЬНЫЕ ПАРАМЕТРЫ ]====================================
        // 'discount' : скидка в виде действительного числа [0..1] (от 0 до 1)
        // =====================================================================
        public void getDiscount(double discount)
        {
            sco = sco - sco * discount;
            // ...
        } // Конец МЕТОДА [2]: "Получить скидку" (getDiscount).


        // МЕТОД [[номер-метода]]: "[названиеМетода]" (MethodName).
        // =========[ ОПИСАНИЕ ]================================================
        // [описание] ...
        // =====================================================================
        // =========[ ДОПОЛНИТЕЛЬНАЯ ИНФОРМАЦИЯ ]===============================
        // Принцип    : [описание-принципа]
        // Пример     : [описание-примера]
        // Примечание : [описание-примечания]
        // Ограничения: [описание-ограничений]
        // Исключения : [описание-исключений]
        // Ошибки     : [описание-ошибок]
        // =====================================================================
        // =========[ ФОРМАЛЬНЫЕ ПАРАМЕТРЫ ]====================================
        // 'param1' : [описание-параметра]
        // 'param2' : [описание-параметра]
        // =====================================================================
        //public int MethodName(int param1, int param2)
        //{


        //    // ...
        //    return 0;
        //} // Конец МЕТОДА [[номер-метода]]: "[названиеМетода]" (MethodName).


        #endregion
        // ==================[ МЕТОДЫ (КОНЕЦ)  ]================================


    } // Конец КЛАССА [1]: "Покупатель" (Customer).


    #endregion
    // ==================[ КЛАССЫ (НАЧАЛО) ]================================


} // Конец ПРОСТРАНСТВА ИМЕН [1]: "Лабораторная работа № 2. Классы в C#" (Lab2_Classes).


// ========================================================================================================================================== //
// КОНЕЦ ФАЙЛА (Customer.cs)
// ========================================================================================================================================== //