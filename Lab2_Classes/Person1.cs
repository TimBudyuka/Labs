// ========================================================================================================================================== //
// НАЧАЛО ФАЙЛА (Person1.cs)
// ========================================================================================================================================== //


// =========[ ИНФОРМАЦИЯ О ФАЙЛЕ (НАЧАЛО) ]================================================================================================== //

// Тип работы  : Практическая работа (Практична робота)
// Тема работы : Классы в C# (Класи в C#)
// Студент     : Будюка Тимур (Timur Budyuka)
// Группа      : 1-3м (Комп'ютерні науки, ФІТ)

// ОПИСАНИЕ:
// Файл класса "Персона 1" (Person1).

// =========[ ИНФОРМАЦИЯ О ФАЙЛЕ (КОНЕЦ)  ]================================================================================================== //


// =========[ ПОДКЛЮЧАЕМЫЕ БИБЛИОТЕКИ, МОДУЛИ, КОМПОНЕНТЫ (НАЧАЛО) ]========================================================================= //
// using [подключаемая-библиотека-модуль-компонент];
// -----[ СИСТЕМНЫЕ/SYSTEM (НАЧАЛО) ]:
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
// -----[ СИСТЕМНЫЕ/SYSTEM (КОНЕЦ)  ].
// =========[ ПОДКЛЮЧАЕМЫЕ БИБЛИОТЕКИ, МОДУЛИ, КОМПОНЕНТЫ (КОНЕЦ)  ]========================================================================= //


// ПРОСТРАНСТВО ИМЕН [1]: "Лабораторная работа № 2. Классы в C#" (Lab2_Classes).
namespace Lab2_Classes
{

    #region// ==================[ КЛАССЫ (НАЧАЛО) ]================================

    // КЛАСС [1]: "Персона 1" (Person1).
    class Person1
    {

        // =========[ ПОЛЯ КЛАССА (НАЧАЛО) ]====================================
        // [модификатор-доступа] [тип] [имя-поля (параметра)];        
        static int count = 0; // Количество объектов класса

        // =========[ ПОЛЯ КЛАССА (КОНЕЦ)  ]====================================





        #region// ==================[ КОНСТРУКТОРЫ (НАЧАЛО) ]==========================


        // КОНСТРУКТОР [1]: "Персона 1" (Person1). БЕЗ ПАРАМЕТРОВ.
        // =========[ ОПИСАНИЕ ]================================================
        // Создает объект Персона (Person).
        // =====================================================================
        // =========[ ДОПОЛНИТЕЛЬНАЯ ИНФОРМАЦИЯ ]===============================
        // Принцип    : [описание-принципа]
        // Пример     : [описание-примера]
        // Примечание : [описание-примечания]
        // Ограничения: [описание-ограничений]
        // Исключения : [описание-исключений]
        // Ошибки     : [описание-ошибок]
        // =====================================================================
        public Person1()
        {
            // Потокобезопасность, поскольку это статическое свойство
            Interlocked.Increment(ref count);
            //count++;

            // ...
        } // Конец КОНСТРУКТОРА [1]: "Персона 1" (Person1). БЕЗ ПАРАМЕТРОВ.


        // КОНСТРУКТОР [2]: "Персона 1" (Person1).
        // =========[ ОПИСАНИЕ ]================================================
        // [описание] ...
        // =====================================================================
        // =========[ ДОПОЛНИТЕЛЬНАЯ ИНФОРМАЦИЯ ]===============================
        // Принцип    : [описание-принципа]
        // Пример     : [описание-примера]
        // Примечание : [описание-примечания]
        // Ограничения: [описание-ограничений]
        // Исключения : [описание-исключений]
        // Ошибки     : [описание-ошибок]
        // =====================================================================
        // =========[ ФОРМАЛЬНЫЕ ПАРАМЕТРЫ ]====================================
        // 'param1' : [описание-параметра]
        // 'param2' : [описание-параметра]
        // =====================================================================
        //public Person1(int param1, int param2) // <-- ref [тип] [параметр]
        //{


        //    // ...
        //}
        // Конец КОНСТРУКТОРА [2]: "Персона 1" (Person1).


        #endregion
        // ==================[ КОНСТРУКТОРЫ (КОНЕЦ)  ]==========================




        #region// ==================[ СВОЙСТВА (НАЧАЛО) ]==============================

        // СВОЙСТВО [1]: "Количество" (Count). АВТОСВОЙСТВО.
        //public int Count { get; set; }
        // Конец СВОЙСТВА [1]: "Количество" (Count). АВТОСВОЙСТВО.


        // СВОЙСТВО [2]: "Количество (Счётчик)" (Count).
        public static int Count
        {
            get // Для ЧТЕНИЯ значения.
            {
                return count;
            } // Конец 'get'.
            set // Для ЗАПИСИ значения. 
            {
                count = value;
            } // Конец 'set'.
        } // Конец СВОЙСТВА [2]: "Количество (Счётчик)" (Count).

        #endregion
        // ==================[ СВОЙСТВА (КОНЕЦ)  ]==============================




        #region// ==================[ МЕТОДЫ (НАЧАЛО) ]================================


        // МЕТОД [[номер-метода]]: "[название]" (MethodName). БЕЗ ПАРАМЕТРОВ.
        // =========[ ОПИСАНИЕ ]================================================
        // [описание] ...
        // =====================================================================
        // =========[ ДОПОЛНИТЕЛЬНАЯ ИНФОРМАЦИЯ ]===============================
        // Принцип    : [описание-принципа]
        // Пример     : [описание-примера]
        // Примечание : [описание-примечания]
        // Ограничения: [описание-ограничений]
        // Исключения : [описание-исключений]
        // Ошибки     : [описание-ошибок]
        // =====================================================================
        //public void MethodName()
        //{


        //    // ...
        //} // Конец МЕТОДА [[номер-метода]]: "[название]" (MethodName). БЕЗ ПАРАМЕТРОВ.


        // МЕТОД [[номер-метода]]: "[названиеМетода]" (MethodName).
        // =========[ ОПИСАНИЕ ]================================================
        // [описание] ...
        // =====================================================================
        // =========[ ДОПОЛНИТЕЛЬНАЯ ИНФОРМАЦИЯ ]===============================
        // Принцип    : [описание-принципа]
        // Пример     : [описание-примера]
        // Примечание : [описание-примечания]
        // Ограничения: [описание-ограничений]
        // Исключения : [описание-исключений]
        // Ошибки     : [описание-ошибок]
        // =====================================================================
        // =========[ ФОРМАЛЬНЫЕ ПАРАМЕТРЫ ]====================================
        // 'param1' : [описание-параметра]
        // 'param2' : [описание-параметра]
        // =====================================================================
        //public int MethodName(int param1, int param2)
        //{


        //    // ...
        //    return 0;
        //} // Конец МЕТОДА [[номер-метода]]: "[названиеМетода]" (MethodName).


        #endregion
        // ==================[ МЕТОДЫ (КОНЕЦ)  ]================================
        
        
        
        #region
        // ==================[ ДЕСТРУКТОРЫ (НАЧАЛО) ]===========================

        //~Person1()
        //{

        //}

        #endregion
        // ==================[ ДЕСТРУКТОРЫ (КОНЕЦ)  ]===========================


    } // Конец КЛАССА [1]: "Персона 1" (Person1).

    #endregion
    // ==================[ КЛАССЫ (НАЧАЛО) ]================================




} // Конец ПРОСТРАНСТВА ИМЕН [1]: "Лабораторная работа № 2. Классы в C#" (Lab2_Classes).


// ========================================================================================================================================== //
// КОНЕЦ ФАЙЛА (Person1.cs)
// ========================================================================================================================================== //